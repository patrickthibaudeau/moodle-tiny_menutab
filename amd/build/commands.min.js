define("tiny_menutab/commands",["exports","editor_tiny/utils","core/str","./common"],(function(_exports,_utils,_str,_common){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.getSetup=void 0;const addTab=editor=>{const range=editor.selection.getRng(),container=range.commonAncestorContainer;if(container.nodeType===Node.TEXT_NODE){const parent=container.parentNode;if(parent&&"H2"===parent.nodeName){const textNode=document.createTextNode(parent.textContent);parent.replaceWith(textNode)}else{const h2=document.createElement("h2");h2.textContent=range.toString(),range.deleteContents(),range.insertNode(h2)}}};_exports.getSetup=async()=>{const[buttonImageText,buttonImage]=await Promise.all([(0,_str.get_string)("add_tab",_common.component),(0,_utils.getButtonImage)("icon",_common.component)]);return editor=>{editor.ui.registry.addIcon(_common.icon,buttonImage.html),editor.ui.registry.addButton(_common.buttonName,{icon:_common.icon,tooltip:buttonImageText,onAction:()=>addTab(editor)}),editor.ui.registry.addMenuItem("menutab_menuitem",{icon:_common.icon,text:buttonImageText,onAction:()=>addTab(editor)})}}}));

//# sourceMappingURL=commands.min.js.map